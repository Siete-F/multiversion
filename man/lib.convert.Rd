% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VC_library_writing.R
\name{lib.convert}
\alias{lib.convert}
\title{Move normally installed packages to R_VC_library structure.}
\usage{
lib.convert(installLibrary = lib.location_install_dir(lib_location),
  lib_location = lib.location(), force_overwrite = FALSE,
  packages_to_convert = c())
}
\arguments{
\item{lib_location}{The folder containing a structure where all packages in the temp folder must be moved to.
By default, it checks the environment variable \code{R_VC_LIBRARY_LOCATION} for this directory.}

\item{force_overwrite}{If you are experimenting and you would like to overwrite the newly installed package.
Normally only desired when the package you are experimenting with is a self maintained package and you are sure you increased the version to a new one.}

\item{normalLibrary}{The temporary library where a package is temporarily installed (having a normal library structure).
By default, the path is generated using \code{lib.location_install_dir()} on the \code{lib_location} that is provided which appends \code{/TEMP_install_location}.}
}
\description{
After this conversion is complete and you set the directory (temporarily by using \code{lib.location(...)}
or for eternity by setting the equally named environment variable) you are good to go! You can directly use \code{lib.load}
for loading packages. Thanks for using \code{RVClibrary}!! \cr
\cr
This function creates the VC library structure by moving normaly installed packages to a more parallel oriented library structure.
lib1/BH/DESCRIPTION   becomes  lib2/BH/1.60.0-2/BH/DESCRIPTION
\cr
This functionallity is also used for converting installed packages from the temporary installation directory to the final R_VC_library format. \cr
\cr
Note that it is realy no problem to perform a conversion again, it will only move new versions of already present packages and will never overwrite.
To continue with a clean Temp folder, run \code{lib.clean_install_dir()}, it will remove the folder.
}
\examples{
# As an experiment (or when getting started) you could run this with your complete standard library (not your base library).
lib.convert(normalLibrary = Sys.getenv("R_LIBS_USER"),
            lib_location  = "C:/REMOVE_ME_example_library")

# Just running it will use the VC library defined by the environment variable and look inside for the Temp folder to use.
lib.convert()

# It is sufficient to only provide the lib_location input, it will look for the temporary folder within automatically.
lib.convert(lib_location = "M:/R_VC_library")

}
